package csc2b.client;

import java.io.BufferedReader;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.Socket;

import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class BUKAClientPane extends GridPane //You may change the JavaFX pane layout
{			
	
	Socket clientSocket;
	//IO Streams
	private PrintWriter pw;
	private DataOutputStream dos;
	private DataInputStream dis;
	private InputStream is;
	private OutputStream os;
	private BufferedReader br;
	
	GridPane grid = new GridPane();
	
	Label userNamelbl = new Label("Username: ") ;
	TextField userNametxt = new TextField();
	
	Label passwordlbl = new Label("Password: ");
	TextField passwordtxt = new TextField();
	
	Button loginbtn = new Button("Login: ");
	
	
	//Nodes when user logs in 
	Label idlbl = new Label("ID: ");
	TextField idtxt= new TextField();
	
	Button logoutbtn = new Button("Logout");
	
	TextArea listArea = new TextArea();

	
	
	//Create client connection
	//Create buttons for each command
	//Use buttons to send commands
    public BUKAClientPane()
    {
    	try {
    		clientSocket = new Socket("localhost", 2018);
    		
    		pw = new PrintWriter(clientSocket.getOutputStream());
    		dis = new DataInputStream(clientSocket.getInputStream());
    		dos = new DataOutputStream(clientSocket.getOutputStream());
    		br = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
    		    		
    	}
    	catch(IOException ex) {
    		ex.getMessage();
    	}
    	//Call the function to create the GUI
    	//createLoginGUI();
    	createUserGUI();
    	
    	//Handle the buttons
    	
    }
	
    
    public void createLoginGUI()
    {	
    	HBox userNameHBox = new HBox(10, userNamelbl, userNametxt);
    	HBox PasswordHBox = new HBox(10, passwordlbl, passwordtxt); 
    	VBox vLoginBox = new VBox(5, userNameHBox, PasswordHBox, loginbtn);
    	
    	add(vLoginBox, 0,0);
    }
    
    public void createUserGUI()
    {
    	HBox idBox = new HBox(10, idlbl, idtxt);
    	VBox vBoxRight = new VBox(10, idBox, listArea);
    	add(vBoxRight, 0, 0);
    	//add(listArea,0,5,5,5);
    	
    }

}









//need socket to establish connection



/*
GridPane grid = new GridPane();

Label userNamelbl = new Label("Username: ") ;
TextField userNametxt = new TextField();

Label passwordlbl = new Label("Password: ");
TextField passwordtxt = new TextField();

Button loginbtn = new Button("Login");



public void createGUI() {
	grid.add(userNamelbl, 0, 0);
	add(userNametxt, 0, 0);
}
*/